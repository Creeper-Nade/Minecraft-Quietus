package com.minecraftquietus.quietus.data;

import com.minecraftquietus.quietus.Quietus;
import com.minecraftquietus.quietus.block.QuietusBlocks;
import com.minecraftquietus.quietus.item.QuietusItems;
import com.minecraftquietus.quietus.item.equipment.QuietusArmorMaterials;
import net.minecraft.client.data.models.BlockModelGenerators;
import net.minecraft.client.data.models.ItemModelGenerators;
import net.minecraft.client.data.models.ModelProvider;
import net.minecraft.client.data.models.model.*;
import net.minecraft.client.renderer.item.*;
import net.minecraft.client.renderer.item.properties.numeric.UseDuration;
import net.minecraft.core.Holder;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.data.PackOutput;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import java.util.Collections;
import java.util.stream.Stream;

public class QuietusModelProvider extends ModelProvider {
    public QuietusModelProvider(PackOutput output) {
        super(output, Quietus.MODID);
    }

    //From Now on, we are no longer having the "items" folder in the mod assets, as they should be generated by datagen.
    // EVERY ITEM OR BLOCK CREATED MUST BE ADDED HERE, use the RegisterBasicModel method if you have customized model json in quietus:models in mod assets.
    // Do a Data run with the mod to update the generation of assets
    @Override
    protected void registerModels(BlockModelGenerators blockModels, ItemModelGenerators itemModels)
    {
       //flat items
        RegisterBasicModel(itemModels,QuietusItems.HARDENED_FUR.get(),"item/ingredients/");
       // itemModels.generateFlatItem(QuietusItems.HARDENED_FUR.get(), ModelTemplates.FLAT_ITEM);
        itemModels.generateFlatItem(QuietusItems.EXAMPLE_ITEM.get(), ModelTemplates.FLAT_ITEM);

        //handheld
        RegisterBasicModel(itemModels,QuietusItems.AMETHYST_STAFF.get(),"item/combat/magic_weapon/");
        //itemModels.generateFlatItem(QuietusItems.AMETHYST_STAFF.get(), ModelTemplates.FLAT_HANDHELD_ITEM);
        itemModels.generateFlatItem(QuietusItems.WEIRD_AMETHYST_STAFF.get(), ModelTemplates.FLAT_HANDHELD_ITEM);

        //bows
        RegisterBow(itemModels,QuietusItems.TRIPLEBOW.get(),"item/combat/");

        //itemModels.createFlatItemModel(QuietusItems.TRIPLEBOW.get(), ModelTemplates.BOW);
        //itemModels.generateBow(QuietusItems.TRIPLEBOW.get());

        itemModels.createFlatItemModel(QuietusItems.INFINIBOW.get(), ModelTemplates.BOW);
        itemModels.generateBow(QuietusItems.INFINIBOW.get());

        itemModels.createFlatItemModel(QuietusItems.PULLBOW.get(), ModelTemplates.BOW);
        itemModels.generateBow(QuietusItems.PULLBOW.get());

        itemModels.createFlatItemModel(QuietusItems.INSTABOW.get(), ModelTemplates.BOW);
        itemModels.generateBow(QuietusItems.INSTABOW.get());


        //trimmables

        itemModels.generateTrimmableItem(QuietusItems.COPPER_HELMET.get(), QuietusArmorMaterials.COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.COPPER_CHESTPLATE.get(), QuietusArmorMaterials.COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.COPPER_LEGGINGS.get(), QuietusArmorMaterials.COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.COPPER_BOOTS.get(), QuietusArmorMaterials.COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_COPPER_HELMET.get(), QuietusArmorMaterials.EXPOSED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_COPPER_CHESTPLATE.get(), QuietusArmorMaterials.EXPOSED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_COPPER_LEGGINGS.get(), QuietusArmorMaterials.EXPOSED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_COPPER_BOOTS.get(), QuietusArmorMaterials.EXPOSED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_COPPER_HELMET.get(), QuietusArmorMaterials.WEATHERED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_COPPER_CHESTPLATE.get(), QuietusArmorMaterials.WEATHERED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_COPPER_LEGGINGS.get(), QuietusArmorMaterials.WEATHERED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_COPPER_BOOTS.get(), QuietusArmorMaterials.WEATHERED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_COPPER_HELMET.get(), QuietusArmorMaterials.OXIDIZED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_COPPER_CHESTPLATE.get(), QuietusArmorMaterials.OXIDIZED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_COPPER_LEGGINGS.get(), QuietusArmorMaterials.OXIDIZED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_COPPER_BOOTS.get(), QuietusArmorMaterials.OXIDIZED_COPPER_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_IRON_HELMET.get(), QuietusArmorMaterials.EXPOSED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_IRON_CHESTPLATE.get(), QuietusArmorMaterials.EXPOSED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_IRON_LEGGINGS.get(), QuietusArmorMaterials.EXPOSED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.EXPOSED_IRON_BOOTS.get(), QuietusArmorMaterials.EXPOSED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_IRON_HELMET.get(), QuietusArmorMaterials.WEATHERED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_IRON_CHESTPLATE.get(), QuietusArmorMaterials.WEATHERED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_IRON_LEGGINGS.get(), QuietusArmorMaterials.WEATHERED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.WEATHERED_IRON_BOOTS.get(), QuietusArmorMaterials.WEATHERED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_IRON_HELMET.get(), QuietusArmorMaterials.OXIDIZED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_IRON_CHESTPLATE.get(), QuietusArmorMaterials.OXIDIZED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_IRON_LEGGINGS.get(), QuietusArmorMaterials.OXIDIZED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.OXIDIZED_IRON_BOOTS.get(), QuietusArmorMaterials.OXIDIZED_IRON_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        itemModels.generateTrimmableItem(QuietusItems.AMETHYST_HELMET.get(), QuietusArmorMaterials.AMETHYST_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/helmet_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.AMETHYST_CHESTPLATE.get(), QuietusArmorMaterials.AMETHYST_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/chestplate_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.AMETHYST_LEGGINGS.get(), QuietusArmorMaterials.AMETHYST_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/leggings_trim"), false);
        itemModels.generateTrimmableItem(QuietusItems.AMETHYST_BOOTS.get(), QuietusArmorMaterials.AMETHYST_KEY, ResourceLocation.fromNamespaceAndPath("minecraft", "trims/items/boots_trim"),  false);

        //System.out.println(ModelLocationUtils.getModelLocation(QuietusItems.EXPOSED_COPPER_BOOTS.get()) != null ? ModelLocationUtils.getModelLocation(QuietusItems.EXPOSED_COPPER_BOOTS.get()) : "model is null");
//blocks
        blockModels.createTrivialCube(QuietusBlocks.EXAMPLE_BLOCK.get());

    }
/*
    public void SetItemLocation(ItemModelGenerators itemModels,Item item, String model_location)
    {
        RegisterClientItem(itemModels,item);
        RegisterBasicModel(itemModels,item,model_location);
    }

    public void RegisterClientItem(ItemModelGenerators itemModels,Item item)
    {
        itemModels.itemModelOutput.register(
                item,
                new ClientItem(
                        // Defines the model to render
                        new BlockModelWrapper.Unbaked(
                                // Points to a model JSON relative to the 'models' directory
                                // Located at 'assets/examplemod/models/item/example_item.json'
                                ModelLocationUtils.getModelLocation(item),
                                Collections.emptyList()
                        ),
                        // Defines some settings to use during the rendering process
                        new ClientItem.Properties(
                                // When false, disables the animation where the item is raised
                                // up towards its normal position on item swap
                                false
                        )
                )
        );
    }*/

    public void RegisterBow(ItemModelGenerators itemModels, Item item, String location)
    {
        ResourceLocation resourceLocation= BuiltInRegistries.ITEM.getKey(item);
        ItemModel.Unbaked itemmodel$unbaked = ItemModelUtils.plainModel(resourceLocation.withPrefix(location));
        ItemModel.Unbaked itemmodel$unbaked1 = ItemModelUtils.plainModel(resourceLocation.withSuffix("_pulling_0").withPrefix(location));
        ItemModel.Unbaked itemmodel$unbaked2 = ItemModelUtils.plainModel(resourceLocation.withSuffix("_pulling_1").withPrefix(location));
        ItemModel.Unbaked itemmodel$unbaked3 = ItemModelUtils.plainModel(resourceLocation.withSuffix("_pulling_2").withPrefix(location));
        itemModels.itemModelOutput.accept(
               item, ItemModelUtils.conditional(ItemModelUtils.isUsingItem(), ItemModelUtils.rangeSelect(new UseDuration(false), 0.05F, itemmodel$unbaked1, new RangeSelectItemModel.Entry[]{ItemModelUtils.override(itemmodel$unbaked2, 0.65F), ItemModelUtils.override(itemmodel$unbaked3, 0.9F)}), itemmodel$unbaked)
        );
    }
    public void RegisterBasicModel(ItemModelGenerators itemModels, Item item, String location)
    {
        ResourceLocation resourceLocation= BuiltInRegistries.ITEM.getKey(item);
        itemModels.itemModelOutput.accept(
                item,
                new BlockModelWrapper.Unbaked(
                        // Points to a model JSON relative to the 'models' directory
                        // Located at 'assets/examplemod/models/item/example_item.json'
                        resourceLocation.withPrefix(location),
                        Collections.emptyList()
                )
        );
    }



    @Override
    protected Stream<? extends Holder<Block>> getKnownBlocks() {
        return QuietusBlocks.BLOCKS.getEntries().stream();
    }

    @Override
    protected Stream<? extends Holder<Item>> getKnownItems() {
        return QuietusItems.REGISTRAR.getEntries().stream();
    }
}
